{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","assets/images/icons/social-google.svg","ui-component/cards/AuthFooter.js","utils/password-strength.js","views/pages/authentication/firebase-forms/FirebaseRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","backgroundColor","theme","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","direction","justifyContent","variant","component","Link","href","target","underline","strengthIndicator","number","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","FirebaseRegister","others","scriptedRef","matchDownSM","useMediaQuery","customization","useSelector","state","React","useState","showPassword","setShowPassword","checked","setChecked","strength","setStrength","level","setLevel","googleHandler","a","console","error","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","value","count","temp","label","errorMain","warningDark","orangeMain","successMain","successDark","Grid","container","item","xs","AnimateButton","Button","disableElevation","fullWidth","onClick","size","src","Google","alt","width","sx","mr","sm","Box","alignItems","display","Divider","orientation","borderRadius","disableRipple","disabled","mb","Typography","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","success","err","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","onMouseDown","edge","height","FormControlLabel","control","Checkbox","to","mt","Register","useTheme","m","Logo","Stack","secondary","main","gutterBottom","textAlign","RouterLink","textDecoration"],"mappings":"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","file":"static/js/6.e0d8d163.chunk.js","sourcesContent":["// material-ui\r\nimport { styled } from '@material-ui/styles';\r\n\r\n// ===========================|| AUTHENTICATION 1 WRAPPER ||=========================== //\r\n\r\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\r\n    backgroundColor: theme.palette.primary.light,\r\n    minHeight: '100vh'\r\n}));\r\n\r\nexport default AuthWrapper1;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n// project import\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        maxWidth: '475px',\r\n        '& > *': {\r\n            flexGrow: 1,\r\n            flexBasis: '50%'\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            margin: '20px'\r\n        },\r\n        [theme.breakpoints.down('lg')]: {\r\n            maxWidth: '400px'\r\n        }\r\n    },\r\n    content: {\r\n        padding: `${theme.spacing(5)} !important`,\r\n        [theme.breakpoints.down('lg')]: {\r\n            padding: `${theme.spacing(3)} !important`\r\n        }\r\n    }\r\n}));\r\n\r\n// ===========================|| AUTHENTICATION CARD WRAPPER ||=========================== //\r\n\r\nconst AuthCardWrapper = ({ children, ...other }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\r\n            {children}\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nAuthCardWrapper.propTypes = {\r\n    children: PropTypes.node\r\n};\r\n\r\nexport default AuthCardWrapper;\r\n","import { useEffect, useRef } from 'react';\r\n\r\n// ===========================|| ELEMENT REFERENCE HOOKS  ||=========================== //\r\n\r\nconst useScriptRef = () => {\r\n    const scripted = useRef(true);\r\n\r\n    useEffect(\r\n        () => () => {\r\n            scripted.current = false;\r\n        },\r\n        []\r\n    );\r\n\r\n    return scripted;\r\n};\r\n\r\nexport default useScriptRef;\r\n","export default __webpack_public_path__ + \"static/media/social-google.a57081bd.svg\";","import React from 'react';\r\n\r\n// material-ui\r\nimport { Link, Typography, Stack } from '@material-ui/core';\r\n\r\n// ===========================|| FOOTER - AUTHENTICATION 2 & 3 ||=========================== //\r\n\r\nconst AuthFooter = () => (\r\n    <Stack direction=\"row\" justifyContent=\"space-between\">\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\r\n            berrydashboard.io\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\r\n            &copy; codedthemes.com\r\n        </Typography>\r\n    </Stack>\r\n);\r\n\r\nexport default AuthFooter;\r\n","/**\r\n * Password validator for login pages\r\n */\r\n\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\n\r\n// has number\r\nconst hasNumber = (number) => new RegExp(/[0-9]/).test(number);\r\n\r\n// has mix of small and capitals\r\nconst hasMixed = (number) => new RegExp(/[a-z]/).test(number) && new RegExp(/[A-Z]/).test(number);\r\n\r\n// has special chars\r\nconst hasSpecial = (number) => new RegExp(/[!#@$%^&*)(+=._-]/).test(number);\r\n\r\n// set color based on password strength\r\nexport const strengthColor = (count) => {\r\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\r\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\r\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\r\n    if (count < 5) return { label: 'Good', color: value.successMain };\r\n    if (count < 6) return { label: 'Strong', color: value.successDark };\r\n    return false;\r\n};\r\n\r\n// password strength indicator\r\nexport const strengthIndicator = (number) => {\r\n    let strengths = 0;\r\n    if (number.length > 5) strengths += 1;\r\n    if (number.length > 7) strengths += 1;\r\n    if (hasNumber(number)) strengths += 1;\r\n    if (hasSpecial(number)) strengths += 1;\r\n    if (hasMixed(number)) strengths += 1;\r\n    return strengths;\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControl,\r\n    FormControlLabel,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@material-ui/core';\r\n\r\n// third party\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\n\r\n// project imports\r\nimport useScriptRef from 'hooks/useScriptRef';\r\nimport Google from 'assets/images/icons/social-google.svg';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport { strengthColor, strengthIndicator } from 'utils/password-strength';\r\n\r\n// assets\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n// style constant\r\nconst useStyles = makeStyles((theme) => ({\r\n    redButton: {\r\n        fontSize: '1rem',\r\n        fontWeight: 500,\r\n        backgroundColor: theme.palette.grey[50],\r\n        border: '1px solid',\r\n        borderColor: theme.palette.grey[100],\r\n        color: theme.palette.grey[700],\r\n        textTransform: 'none',\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.primary.light\r\n        },\r\n        [theme.breakpoints.down('sm')]: {\r\n            fontSize: '0.875rem'\r\n        }\r\n    },\r\n    signDivider: {\r\n        flexGrow: 1\r\n    },\r\n    signText: {\r\n        cursor: 'unset',\r\n        margin: theme.spacing(2),\r\n        padding: '5px 56px',\r\n        borderColor: `${theme.palette.grey[100]} !important`,\r\n        color: `${theme.palette.grey[900]}!important`,\r\n        fontWeight: 500\r\n    },\r\n    loginIcon: {\r\n        marginRight: '16px',\r\n        [theme.breakpoints.down('sm')]: {\r\n            marginRight: '8px'\r\n        }\r\n    },\r\n    loginInput: {\r\n        ...theme.typography.customInput\r\n    }\r\n}));\r\n\r\n//= ==========================|| FIREBASE - REGISTER ||===========================//\r\n\r\nconst FirebaseRegister = ({ ...others }) => {\r\n    const classes = useStyles();\r\n    const scriptedRef = useScriptRef();\r\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\r\n    const customization = useSelector((state) => state.customization);\r\n    const [showPassword, setShowPassword] = React.useState(false);\r\n    const [checked, setChecked] = React.useState(true);\r\n\r\n    const [strength, setStrength] = React.useState(0);\r\n    const [level, setLevel] = React.useState('');\r\n\r\n    const googleHandler = async () => {\r\n        console.error('Register');\r\n    };\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const changePassword = (value) => {\r\n        const temp = strengthIndicator(value);\r\n        setStrength(temp);\r\n        setLevel(strengthColor(temp));\r\n    };\r\n\r\n    useEffect(() => {\r\n        changePassword('123456');\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <AnimateButton>\r\n                        <Button\r\n                            disableElevation\r\n                            fullWidth\r\n                            className={classes.redButton}\r\n                            onClick={googleHandler}\r\n                            size=\"large\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\r\n                            up with Google\r\n                        </Button>\r\n                    </AnimateButton>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box\r\n                        sx={{\r\n                            alignItems: 'center',\r\n                            display: 'flex'\r\n                        }}\r\n                    >\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                        <AnimateButton>\r\n                            <Button\r\n                                variant=\"outlined\"\r\n                                className={classes.signText}\r\n                                sx={{ borderRadius: `${customization.borderRadius}px` }}\r\n                                disableRipple\r\n                                disabled\r\n                            >\r\n                                OR\r\n                            </Button>\r\n                        </AnimateButton>\r\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\r\n                    <Box\r\n                        sx={{\r\n                            mb: 2\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    email: 'info@codedthemes.com',\r\n                    password: '123456',\r\n                    submit: null\r\n                }}\r\n                validationSchema={Yup.object().shape({\r\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                    password: Yup.string().max(255).required('Password is required')\r\n                })}\r\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n                    try {\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: true });\r\n                            setSubmitting(false);\r\n                        }\r\n                    } catch (err) {\r\n                        console.error(err);\r\n                        if (scriptedRef.current) {\r\n                            setStatus({ success: false });\r\n                            setErrors({ submit: err.message });\r\n                            setSubmitting(false);\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\r\n                    <form noValidate onSubmit={handleSubmit} {...others}>\r\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"First Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"fname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Joseph\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"Last Name\"\r\n                                    margin=\"normal\"\r\n                                    name=\"lname\"\r\n                                    type=\"text\"\r\n                                    defaultValue=\"Doe\"\r\n                                    className={classes.loginInput}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-email-register\"\r\n                                type=\"email\"\r\n                                value={values.email}\r\n                                name=\"email\"\r\n                                onBlur={handleBlur}\r\n                                onChange={handleChange}\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.email && errors.email && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\r\n                                    {' '}\r\n                                    {errors.email}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\r\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\r\n                            <OutlinedInput\r\n                                id=\"outlined-adornment-password-register\"\r\n                                type={showPassword ? 'text' : 'password'}\r\n                                value={values.password}\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                onBlur={handleBlur}\r\n                                onChange={(e) => {\r\n                                    handleChange(e);\r\n                                    changePassword(e.target.value);\r\n                                }}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        <IconButton\r\n                                            aria-label=\"toggle password visibility\"\r\n                                            onClick={handleClickShowPassword}\r\n                                            onMouseDown={handleMouseDownPassword}\r\n                                            edge=\"end\"\r\n                                        >\r\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                        </IconButton>\r\n                                    </InputAdornment>\r\n                                }\r\n                                inputProps={{\r\n                                    classes: {\r\n                                        notchedOutline: classes.notchedOutline\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {touched.password && errors.password && (\r\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\r\n                                    {' '}\r\n                                    {errors.password}{' '}\r\n                                </FormHelperText>\r\n                            )}\r\n                        </FormControl>\r\n\r\n                        {strength !== 0 && (\r\n                            <FormControl fullWidth>\r\n                                <Box\r\n                                    sx={{\r\n                                        mb: 2\r\n                                    }}\r\n                                >\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Box\r\n                                                backgroundColor={level.color}\r\n                                                sx={{\r\n                                                    width: 85,\r\n                                                    height: 8,\r\n                                                    borderRadius: '7px'\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\r\n                                                {level.label}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Box>\r\n                            </FormControl>\r\n                        )}\r\n\r\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Grid item>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox\r\n                                            checked={checked}\r\n                                            onChange={(event) => setChecked(event.target.checked)}\r\n                                            name=\"checked\"\r\n                                            color=\"primary\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Agree with &nbsp;\r\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\r\n                                                Terms & Condition.\r\n                                            </Typography>\r\n                                        </Typography>\r\n                                    }\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        {errors.submit && (\r\n                            <Box\r\n                                sx={{\r\n                                    mt: 3\r\n                                }}\r\n                            >\r\n                                <FormHelperText error>{errors.submit}</FormHelperText>\r\n                            </Box>\r\n                        )}\r\n\r\n                        <Box\r\n                            sx={{\r\n                                mt: 2\r\n                            }}\r\n                        >\r\n                            <AnimateButton>\r\n                                <Button\r\n                                    disableElevation\r\n                                    disabled={isSubmitting}\r\n                                    fullWidth\r\n                                    size=\"large\"\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                >\r\n                                    Sign up\r\n                                </Button>\r\n                            </AnimateButton>\r\n                        </Box>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FirebaseRegister;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\r\n\r\n// project imports\r\nimport AuthWrapper1 from '../AuthWrapper1';\r\nimport AuthCardWrapper from '../AuthCardWrapper';\r\nimport Logo from 'ui-component/Logo';\r\nimport FirebaseRegister from '../firebase-forms/FirebaseRegister';\r\nimport AuthFooter from 'ui-component/cards/AuthFooter';\r\n\r\n// assets\r\n\r\n//= ==============================|| AUTH3 - REGISTER ||===============================//\r\n\r\nconst Register = () => {\r\n    const theme = useTheme();\r\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <AuthWrapper1>\r\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\r\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\r\n                            <AuthCardWrapper>\r\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\r\n                                    <Grid item sx={{ mb: 3 }}>\r\n                                        <RouterLink to=\"#\">\r\n                                            <Logo />\r\n                                        </RouterLink>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid\r\n                                            container\r\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\r\n                                            alignItems=\"center\"\r\n                                            justifyContent=\"center\"\r\n                                        >\r\n                                            <Grid item>\r\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\r\n                                                    <Typography\r\n                                                        color={theme.palette.secondary.main}\r\n                                                        gutterBottom\r\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\r\n                                                    >\r\n                                                        Sign up\r\n                                                    </Typography>\r\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\r\n                                                        Enter your credentials to continue\r\n                                                    </Typography>\r\n                                                </Stack>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <FirebaseRegister />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Divider />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\r\n                                            <Typography\r\n                                                component={RouterLink}\r\n                                                to=\"/pages/login/login3\"\r\n                                                variant=\"subtitle1\"\r\n                                                sx={{ textDecoration: 'none' }}\r\n                                            >\r\n                                                Have an account?\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </AuthCardWrapper>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\r\n                    <AuthFooter />\r\n                </Grid>\r\n            </Grid>\r\n        </AuthWrapper1>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}